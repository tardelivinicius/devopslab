name: DevOpsLab Pipeline

on:
  push:
    branches:
      - devsecops

jobs:
  analyze:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          
          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality
      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  code-analisys:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - run: python app.py

  Build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v4       # https://github.com/actions/checkout
        with:
          # Você está solicitando que nenhum histórico seja baixado além do commit mais recente.
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5   # https://github.com/actions/setup-python
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install flask flask-wtf

      - name: Unit Test
        run: python -m unittest -v test

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master  #https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login no Artifact Registry
        uses: docker/login-action@v3      # https://github.com/marketplace/actions/docker-login#google-artifact-registry-gar
        with:
          registry: '${{ vars.GOOGLE_ARTIFACT }}'
          username: _json_key
          password: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Build Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .

      - name: Push Image
        run: |
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Download do Repositório
        uses: actions/checkout@v4       # https://github.com/actions/checkout

      - name: Login no GCP
        uses: 'google-github-actions/auth@v2' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'  # https://github.com/marketplace/actions/deploy-to-cloud-run
        with:
          service: ${{ vars.GOOGLE_MYAPP }}
          region: ${{ vars.GOOGLE_REGION }}
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
          flags: '--allow-unauthenticated'

      - name: Validando a API
        run: 'curl "${{ steps.deploy.outputs.url }}"'

      - name: Notificação Slack
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "DevOpsLab Pipeline : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "DevOpsLab Pipeline: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_TOKEN }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
